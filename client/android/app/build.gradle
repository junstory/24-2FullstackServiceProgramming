plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// .env 파일 읽기 위한 플러그인 추가
def dotenvFile = rootProject.file(".env")
def envVars = [:]
//println "Reading .env file: ${dotenvFile}"
if (dotenvFile.exists()) {
    dotenvFile.eachLine { line ->
        def keyValue = line.split("=")
        if (keyValue.length == 2) {
            envVars[keyValue[0].trim()] = keyValue[1].trim()
        }
    }
}

android {
    namespace = "com.example.client"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.client"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        // 환경 변수 전달
        // manifestPlaceholders = [
        //     KAKAO_NATIVE_APP_KEY: envVars["KAKAO_NATIVE_APP_KEY"] ?: "",
        //     applicationName :
        // ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

